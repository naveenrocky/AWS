AWS : Computing Resources ( CPU, Memory, Storage, network, application / Services)

AWS : 
2003 : Chris Pinkman and Benjamin black.. SQS sell it as a service.. 
2006 : AWS Oficially launched.. 

Security : Shared Security Model

AWS : Infrastructure : Security OF the Cloud

Our Responsibility : 2 factor / strong password : Security IN the Cloud


AWS Global Infra : 

Regions : 22 Regions : Physical / Geo Graphical location ..   Every Region contains Min of 2 AZs


Mumbai : Nearest : Low Latency
NV : Billing Region

18 Regions : Open for all.. 
2 Regions : 2 China 
2 Regions : Us-Gov-Cloud


Availability Zone / AZs : 69 AZs : DC / Combination of multiple DC.. one DC failure cannot effect the another DC.. 

Mumbai : 3 AZs
NV : 6 AZ

PoP / Edge Locations : Cached location.. 200 Edge location.. 



aws.amazon.com/free


s3 : Storage : store flat files..  : 5 gb Standard storage, 2000 PUT, 20,000 GET..
ec2 : Elastic compute cloud : We run servers.. : 750 Hrs /Month Windows : t2.micro
						 750 Hrs / Month Linux : t2.micro

RDS : Database : We run databases : 750 Hrs /Month : db.t2.micro


aws.amazon.com/free

Root user : Email address : Full Access on AWS Account.. 	

Step 1 : Email, Password and Account Name

Step 2 : Contact Information : name and Address, Ph No.. 	

Step 3 : Payment information : Visa, Master Card and AMEX.. 2 INR.. 

Step 4 : Identity Verification : Captcha and Phone no, ANswer the call and enter 4 digit pin

Step 5 : Choose a Support Plan : 

AWS Professional Services
APN (Amazon Partner Network)

1. Account and Billing 		--> 24x7 for all support plans
2. Service Limit increase 	--> 24x7 for all support plans
3. Technical Support		--> Depends on the support plan and severiarity


Basic : FREE, No Technical support, Technical support : support forums / KB articles.. 7 core checks.. 

Developer : 29$/Month,  3 --> 12-24 local business hours.. 7 core checks... Primary User, Multiple tickets.. 

Business : 100$/Month, 3 --> 1 Hour, Full Set of Trusted Advisor checks... Any user.. 

Enterprise : 15k$/Month, 3 --> Business critical : 15 Min, Prod : 1 Hr, Sr Engineer, Sr Solutions architect will review account.. Full Set of Trusted Advisor checks.. Any User.. 



MFA : Multi Factor Authentication : 

--> Virtual MFA Device : Soft Phone : 
	Android/ios : Google Authenticator , Authey 2 Factor Authenticator
	Windows : Authenticator
--> Hardware MFA Devices : Purchase a device : 
--> U2F security Key : 



Email : root Account : 

4 AWS team : 
--> Full Access : TL  : Administrator policy 
--> Storage : Storage Admin : s3 service : s3fullaccess
--> Compute  : System Engineer : ec2 : ec2readonly
--> Monitoring : Monitoring  : read only : readonly


IAM : identity and Access Management : 

Policy : Document written in JSON format, COntains set of permissions on our AWS Account.

Administrator policy : Full access on Aws service and resources.
s3 : s3 readonly / s3fullaccess
ec2 : ec2readonly / ec2fullaccess 
readonly : 



GUI : AWS Management console Access : Username, pwd & sign-in

CLI : Programatic Access : AccessKeyID and SecretAccessKey
	3rd party application / sdk / api / cli operations



Step 1 : Username
Step 2 : Access type
	--> AWS Programatic Access
	--> AWS Management console Access (Password, password change)

Step 3 : Permissions
	--> Groups
	--> Another USer
	--> Associate policy directly

Step 4 : Add Tags
Step 5 : Review and create



AdministratorAccess : Provides full access to AWS services and resources.

PowerUserAccess : Provides full access to AWS services and resources, but does not allow management of Users and groups.

ReadOnlyAccess : Provides read-only access to AWS services and resources.



user 1 : S3FullAccess : Implicit Allow : He can access only s3
user 2 : Admin policy and s3andec2deny : He can access everything but not ec2 and s3



Cloudtrail : Stores all logs.. Defaultly Last 90 Days.. 



Task 1 : Create an IAM user with "AdministratorAccess" and try to access Billing dashboard. 

Task 2 : Create an IAM user (user1) with "S3ReadOnly" "AdministratorAccess" and "S3FullAccess" policy and try to create an s3 bucket.

Task 3 : Create a Customer Managed Policy to Deny S3 and Apply to IAM user (user1) and verify the same.

Task 4 : Understand the IAM policy simulator for User1.


Task 5 : Create an IAM user with Administrator Policy and Make sure he is able to access billing dhashboard also.

Task 6 : Create a billing alarm where last 6 hrs bill is >= 0.50$

Object based :flat files, We cannot install any OS / Applications. 
Block Based : EBS / Instance store 
Network file systems : EFS / FSx / Lustre


S3 : Simple Storage Service : 

--> Object based storage. We cannot install OS.
--> We can store all flat files. (mp3, mp4, jpeg, png, pdf...)
--> Unlimited storage available.
--> Max object size s3 : 5 TB
--> No Pre Provisioning required.
--> Bucket = folder / directory with unique namespace.
--> S3 is a glober service, Does not required region selection.
--> Whenever we are creating a bucket, we need to choose a region.

Bucket Naming Limitations : Must comply with DNS naming standards
	--> Min 3 char, Max 63 Char
	--> No Uppercase letters
	--> No Special Characters
	--> Should not start with .  Should not end with .  No adjesent ..
	--> Should not resemble IP address format.

Read : 5500 read requests/sec		
Write : 3500 Write request / sec

By designing Specific Naming Prefix.. 

Athena / Redshift --> Query services

https://s3.regioncode.amazonaws.com/bucketname/objectname	--> Standard Path/URL

https://s3.ap-south-1.amazonaws.com/batch66/aws730.txt


 		Access pattern				Storage class

 		Daily / Frequently			S3-Standard
		Infrequrtly / Need data immedeatly 	Standard-IA / OneZone-IA
		Archieve / Restore duration		Glacier / Deep Archieve
		Non mission critical data		RRS (Reduced Redundancy Storage)
		Easily reproducable			

Intelligent tier : If we are not sure about our access pattetrns.


Pricing :

Storage class & size / Month
Requests
Data Transfer

Free Tier : 
5 gb "Standard Storage"
2000 PUT Requests
20000 GET Requests



Version : 
--> Backup option on our s3 bucket
--> Defaultly in Suspended state, We can enable and we can suspend.
--> Before enabling versioning, existing obj will get Version id as NULL
--> If you delete LATEST VERSION of the object (when version "HIDE"), we will get a delete Market. Delete the DM to get our object bask to s3 bucket.

CRR : 

Server ACcess Logs :

Tags / Metadata : 

Static website hosting: 

--> No need to maintain any servers.
--> Easy to host and easy to manage.
--> Availability : 99.99% and Durability : 99.999999999 %

Domain Name = Bucket Name


Http Status Code :

2xx --> OK/ Success
3xx --> Redirection error
4xx --> Client Side error 
5xx --> Server Side error 




Task 1 : Create an S3 bucket and observe the naming limitations.

Task 2 : Enable the Version and test it.

Task 3 : Apply Lifecycle management rule to move data from s3-standard to Delete automatically.

Task 4 : Perform Task 3 with Prefix option.

Task 5 : Read the S3 Storage classes comparison chart.

Task 6 : https://docs.aws.amazon.com/AmazonS3/latest/dev/optimizing-performance.html.



In-Transit Encryption : http & https (ssl / tls)

Server Side Encryption / At-rest: 

--> SSE-S3 (AES-256)
--> SSE-KMS (KMS Managed Key) (KMS : Key Management Service)
--> SSE-C (Customer Provided) (KMS will Manage the keys for us, but customer need to            provide key material)

Client side encryption: 

--> If you have your own Encyrtion mech/tools, we can go with CSE.
--> AWS On-Prem SDK's to encrypt the data and you can send data to s3 platform.
--> Where you really don't want to send any Unecrypted data to AWS.



KMS :

Give a Name
Choose Type :	KMS, External, HSM

Permissions : KEY Administrator Permissions : He can use key and manage another users permissions
	      Key Usage Permissions : He can just use the key

Object Lock:

Governance mode : Can be disabled by AWS accounts that have specific IAM permissions.
Compliance mode : Cannot be disabled by any user, including the root account.

Events: 
--> SNS (Simple Notification Service) : 
--> SQS
--> Lambda




https://avinash66.s3.ap-south-1.amazonaws.com/avinashaws.pdf

https://www.udemy.com/course/linuxwithavinash/?couponCode=AVINASHAWS



Bulk retrieval : Typically within 5-12 hours

Standard retrieval :Typically within 3 - 5 hours

Expedited retrieval :Typically within 1 - 5 minutes when retrieving less than 250MB



Replication : 

CRR : Cross Region Replication : 

SRR : Same Region Replication : 



IMPORT / EXPORT : 

--> AWS Snowball : 50 TB  : 200$/Job, 10 Days Free.. 
--> AWS Snowball Edge : 80 /100TB TB : 250$/job, 10 Days.. 
--> AWS Snowmobile : PB scale container : 





Task : Configure SRR with an S3 bucket.

Task 2 : Create a s3 bucket policy to Deny "Put, GET, GET busket policy, Put bucket policy, Delete bucket" for an IAM User (S3FullAccess)..


Task 3 : Create an IAM policy to Deny "Put Object" on s3 platform and apply for an IAM user (S3FullAccess) and test it.




















